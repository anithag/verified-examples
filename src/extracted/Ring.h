/* 
  This file was generated by KreMLin <https://github.com/FStarLang/kremlin>
  KreMLin invocation: krml -verify -skip-linking -bundle WasmSupport ../Reader.fst -I ../
  F* version: b55bb590
  KreMLin version: 2f843633
 */

#include "kremlib.h"
#ifndef __Ring_H
#define __Ring_H




bool Ring_is_rb_full(uint32_t rsize, uint32_t head1, uint32_t tail1);

bool Ring_is_rb_empty(uint32_t rsize, uint32_t head1, uint32_t tail1);

uint32_t Ring_incr_ht(uint32_t ht, uint32_t rsize);

uint32_t Ring_get_current_size(uint32_t head1, uint32_t tail1, uint32_t rsize);

uint32_t Ring_get_remaining_space(uint32_t head1, uint32_t tail1, uint32_t rsize);

typedef struct Ring_ringstruct__uint8_t_s
{
  uint8_t *rbuf;
  uint32_t *headptr;
  uint32_t *tailptr;
  uint32_t rsize;
}
Ring_ringstruct__uint8_t;

Ring_ringstruct__uint8_t Ring_init__uint8_t(uint8_t i, uint32_t s);

void Ring_push__uint8_t(Ring_ringstruct__uint8_t r, uint8_t v1);

uint8_t Ring_pop__uint8_t(Ring_ringstruct__uint8_t r);

void Ring_push2__uint8_t(Ring_ringstruct__uint8_t r, uint8_t v1, uint8_t v2);

uint8_t Ring_test_ringbuffer();

#define __Ring_H_DEFINED
#endif
